{"version":3,"sources":["demo.component.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAA6C,eAAe,CAAC,CAAA;AAC7D,+BAAkC,gBAAgB,CAAC,CAAA;AAOnD;IAkBE,uBAAoB,KAAwB;QAAxB,UAAK,GAAL,KAAK,CAAmB;QAjB5C,YAAO,GAAW,EAAE,CAAC;QACrB,QAAG,GAAW,EAAE,CAAC;QACjB,WAAM,GAAW,EAAE,CAAC;QACpB,WAAM,GAAW,GAAG,CAAC;QACrB,eAAU,GAAY,KAAK,CAAC;QAC5B,YAAO,GAAY,KAAK,CAAC;QACzB,eAAU,GAAY,KAAK,CAAC;QAC5B,cAAS,GAAY,IAAI,CAAC;QAC1B,UAAK,GAAW,SAAS,CAAC;QAC1B,eAAU,GAAW,SAAS,CAAC;QAC/B,aAAQ,GAAW,GAAG,CAAC;QACvB,cAAS,GAAW,cAAc,CAAC;QACnC,mBAAc,GAAW,CAAC,CAAC;QAC3B,eAAU,GAAa,EAAE,CAAC;QAC1B,aAAQ,GAAY,KAAK,CAAC;QAC1B,gBAAW,GAAW,CAAC,CAAC;QAGtB,iFAAiF;QACjF,2DAA2D;QAC3D,GAAG,CAAC,CAAC,IAAI,IAAI,IAAI,KAAK,CAAC,CAAC,CAAC;YACvB,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC5C,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAC7B,CAAC;YAAA,CAAC;QACJ,CAAC;IACH,CAAC;IAED,iCAAS,GAAT,UAAU,MAAU;QAAV,sBAAU,GAAV,UAAU;QAClB,IAAI,CAAC,OAAO,IAAI,MAAM,CAAC;IACzB,CAAC;IAED,uCAAe,GAAf;QACE,IAAI,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC;QAC7B,IAAI,SAAS,GAAG,CAAC,MAAM,GAAG,EAAE,GAAG,mBAAmB,CAAC,GAAG,kBAAkB,CAAC;QAEzE,MAAM,CAAC;YACL,KAAK,EAAE,MAAM,GAAG,MAAM,GAAG,KAAK;YAC9B,QAAQ,EAAE,MAAM,GAAG,IAAI,GAAG,MAAM;YAChC,MAAM,EAAE,KAAK;YACb,WAAW,EAAE,SAAS;YACtB,gBAAgB,EAAE,SAAS;YAC3B,mBAAmB,EAAE,SAAS;YAC9B,WAAW,EAAE,IAAI,CAAC,MAAM,GAAG,GAAG,GAAG,IAAI;SACtC,CAAC;IACJ,CAAC;IAlDH;QAAC,gBAAS,CAAC;YACT,QAAQ,EAAE,MAAM;YAChB,WAAW,EAAE,aAAa;YAC1B,aAAa,EAAE,wBAAiB,CAAC,IAAI;SACtC,CAAC;;qBAAA;IA+CF,oBAAC;AAAD,CA9CA,AA8CC,IAAA;AA9CY,qBAAa,gBA8CzB,CAAA;AAAA,CAAC","file":"demo.component.js","sourcesContent":["import { Component, ViewEncapsulation } from '@angular/core';\r\nimport { RoundProgressEase } from 'round-progress';\r\n\r\n@Component({\r\n  selector: 'demo',\r\n  templateUrl: './demo.html',\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class DemoComponent {\r\n  current: number = 27;\r\n  max: number = 50;\r\n  stroke: number = 15;\r\n  radius: number = 125;\r\n  semicircle: boolean = false;\r\n  rounded: boolean = false;\r\n  responsive: boolean = false;\r\n  clockwise: boolean = true;\r\n  color: string = '#45ccce';\r\n  background: string = '#eaeaea';\r\n  duration: number = 800;\r\n  animation: string = 'easeOutCubic';\r\n  animationDelay: number = 0;\r\n  animations: string[] = [];\r\n  gradient: boolean = false;\r\n  realCurrent: number = 0;\r\n\r\n  constructor(private _ease: RoundProgressEase) {\r\n    // Kinda hacky way to get all of the easing functions at run-time, because it can\r\n    // technically fetch something from up the prototype chain.\r\n    for (let prop in _ease) {\r\n      if (prop.toLowerCase().indexOf('ease') > -1) {\r\n        this.animations.push(prop);\r\n      };\r\n    }\r\n  }\r\n\r\n  increment(amount = 1) {\r\n    this.current += amount;\r\n  }\r\n\r\n  getOverlayStyle() {\r\n    let isSemi = this.semicircle;\r\n    let transform = (isSemi ? '' : 'translateY(-50%) ') + 'translateX(-50%)';\r\n\r\n    return {\r\n      'top': isSemi ? 'auto' : '50%',\r\n      'bottom': isSemi ? '5%' : 'auto',\r\n      'left': '50%',\r\n      'transform': transform,\r\n      '-moz-transform': transform,\r\n      '-webkit-transform': transform,\r\n      'font-size': this.radius / 3.5 + 'px'\r\n    };\r\n  }\r\n};\r\n"],"sourceRoot":"/source/"}